"""Database init

Revision ID: 54fc3dc05798
Revises: 
Create Date: 2024-01-07 06:11:15.867514

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "54fc3dc05798"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "city",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name",
            sa.Text(),
            nullable=True,
            comment="Наименование населенного пункта",
        ),
        sa.PrimaryKeyConstraint("id", name="city_pkey"),
        comment="Справочник. Населенные пункты Сахалинской области",
    )
    op.create_table(
        "district",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name", sa.Text(), nullable=True, comment="Наименование района"
        ),
        sa.PrimaryKeyConstraint("id", name="district_pkey"),
        comment="Справочник. Районы Сахалинской области",
    )
    op.create_table(
        "industry",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name", sa.Text(), nullable=True, comment="Наименование индустрии"
        ),
        sa.PrimaryKeyConstraint("id", name="industry_pkey"),
        comment="Справочник. Отрасли экономики",
    )
    op.create_table(
        "support_org",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id", name="support_org_pkey"),
        comment="Справочник. Министерство, ведомство, оказывающее поддержку",
    )
    op.create_table(
        "support_programm",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name", sa.Text(), nullable=True, comment="Наименование программы"
        ),
        sa.Column(
            "active",
            sa.Boolean(),
            nullable=True,
            comment="Признак активности программы",
        ),
        sa.Column(
            "level_type_code",
            sa.Enum(
                "FEDERAL", "REGION", "MUNICIPAL", name="programm_level_type"
            ),
            nullable=True,
            comment="Уровень программы",
        ),
        sa.PrimaryKeyConstraint("id", name="support_programm_pkey"),
        comment="Справочник. Федеральные, региональные и муниципальные программы поддержки",
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("last_name", sa.Text(), nullable=True, comment="Фамилия"),
        sa.Column("first_name", sa.Text(), nullable=True, comment="Имя"),
        sa.Column("middle_name", sa.Text(), nullable=True, comment="Отчество"),
        sa.Column(
            "email", sa.Text(), nullable=True, comment="Адрес электронной почты"
        ),
        sa.Column(
            "role_code",
            sa.Enum(
                "ADMIN",
                "PROJECT_EDITOR",
                "PROJECT_VIEWER",
                "REPORT_EXPORTER_ALL",
                name="role_code_type",
            ),
            nullable=True,
            comment="Роль пользователя",
        ),
        sa.PrimaryKeyConstraint("id", name="user_pkey"),
        comment="Пользователи системы",
    )
    op.create_table(
        "address",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("district_id", sa.Integer(), nullable=True),
        sa.Column("city_id", sa.Integer(), nullable=True),
        sa.Column(
            "post_code", sa.Text(), nullable=True, comment="Почтовый индекс"
        ),
        sa.Column(
            "address",
            sa.Text(),
            nullable=True,
            comment="Улица, дом, квартира, офис",
        ),
        sa.ForeignKeyConstraint(
            ["city_id"], ["city.id"], name="address_city_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["district_id"], ["district.id"], name="address_district_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="address_pkey"),
        comment="Адреса",
    )
    op.create_table(
        "business_man",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address_id", sa.Integer(), nullable=True),
        sa.Column("last_name", sa.Text(), nullable=True, comment="Фамилия"),
        sa.Column("first_name", sa.Text(), nullable=True, comment="Имя"),
        sa.Column("middle_name", sa.Text(), nullable=True, comment="Отчество"),
        sa.Column("inn", sa.Text(), nullable=True, comment="ИНН"),
        sa.Column("ogrn", sa.Text(), nullable=True, comment="ОГРН"),
        sa.ForeignKeyConstraint(
            ["address_id"], ["address.id"], name="business_man_address_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="business_man_pkey"),
        comment="Клиент - ИП или физическое лицо",
    )
    op.create_table(
        "business_org",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address_id", sa.Integer(), nullable=True),
        sa.Column(
            "name", sa.Text(), nullable=True, comment="Полное наименование"
        ),
        sa.Column(
            "name_short",
            sa.Text(),
            nullable=True,
            comment="Сокращенное наименование",
        ),
        sa.Column("inn", sa.Text(), nullable=True, comment="ИНН"),
        sa.Column("ogrn", sa.Text(), nullable=True, comment="ОГРН"),
        sa.ForeignKeyConstraint(
            ["address_id"], ["address.id"], name="business_org_address_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="business_org_pkey"),
        comment="Клиент - юридическое лицо",
    )
    op.create_table(
        "owner",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("business_org_id", sa.Integer(), nullable=True),
        sa.Column("business_man_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["business_man_id"],
            ["business_man.id"],
            name="owner_business_man_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["business_org_id"],
            ["business_org.id"],
            name="owner_business_org_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="owner_pkey"),
        comment="Сущность владельца проектом",
    )
    op.create_table(
        "owner_contact",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column(
            "phone_no", sa.Text(), nullable=True, comment="Номер телефона"
        ),
        sa.Column(
            "email", sa.Text(), nullable=True, comment="Адрес электронной почты"
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["owner.id"], name="owner_contact_owner_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="owner_contact_pkey"),
        comment="Контакты владельца проектом",
    )
    op.create_table(
        "project",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column("address_id", sa.Integer(), nullable=True),
        sa.Column("industry_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True, comment="Название проекта"),
        sa.Column(
            "application_own_amount",
            sa.Numeric(),
            nullable=True,
            comment="Собственная сумма. Заполняет сотрудник. Источник Клиент. По звонку или по заявлению",
        ),
        sa.Column(
            "application_support_amount",
            sa.Numeric(),
            nullable=True,
            comment="Запрашиваемая сумма. Заполняет сотрудник. Источник Клиент. По звонку или по заявлению",
        ),
        sa.Column(
            "work_place_count",
            sa.Integer(),
            nullable=True,
            comment="Количество рабочих мест. Заполняет сотрудник. Источник Клиент. По звонку или по заявлению",
        ),
        sa.Column(
            "nalog_amount",
            sa.Integer(),
            nullable=True,
            comment="Налоги, отчисляемые в бюджет. Заполняет сотрудник. Источник Клиент. По звонку или по заявлению",
        ),
        sa.Column(
            "description",
            sa.Text(),
            nullable=True,
            comment="Описание проекта. Заполняет сотрудник. Источник Клиент. По звонку или по заявлению",
        ),
        sa.Column(
            "state",
            sa.Enum(
                "APPLICANTION_SHORT",
                "APPLICANTION_FULL",
                "DELETED",
                "ENDED",
                "FREEZE",
                "ARCHIVE",
                "PROJECT_IN_COMISSION",
                "PROJECT_ON_SUPPORT",
                name="project_state_type",
            ),
            nullable=True,
            comment="Состояние проекта",
        ),
        sa.ForeignKeyConstraint(
            ["address_id"], ["address.id"], name="project_address_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["industry_id"], ["industry.id"], name="project_industry_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"], ["owner.id"], name="project_owner_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="project_pkey"),
        comment="Проект",
    )
    op.create_table(
        "support",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "project_id",
            sa.Integer(),
            nullable=True,
            comment="ID проекта к которому относится поддержка",
        ),
        sa.Column(
            "support_programm_id",
            sa.Integer(),
            nullable=True,
            comment="ID государственной программы, по которой выделяется поддержка",
        ),
        sa.Column(
            "support_org_id",
            sa.Integer(),
            nullable=True,
            comment="ID государственного органа, выделяющего поддержку",
        ),
        sa.Column(
            "date_start",
            sa.Date(),
            nullable=True,
            comment="Дата начала выделения поддержки",
        ),
        sa.Column(
            "date_end",
            sa.Date(),
            nullable=True,
            comment="Дата окончания выделения поддержки",
        ),
        sa.Column(
            "type_code",
            sa.Enum(
                "FINANCE",
                "CREDIT",
                "EARTH",
                "EQUIP",
                "TECH",
                name="support_type",
            ),
            nullable=True,
            comment="Вид поддержки",
        ),
        sa.Column(
            "amount", sa.Numeric(), nullable=True, comment="Размер поддержки"
        ),
        sa.Column(
            "unit",
            sa.Enum(
                "RUB",
                "PIECES",
                "METERS",
                "METERS_CUBIC",
                "METERS_SQUARE",
                "HECTARES",
                name="unit_type",
            ),
            nullable=True,
        ),
        sa.Column("desc", sa.Text(), nullable=True, comment="Описание"),
        sa.ForeignKeyConstraint(
            ["project_id"], ["project.id"], name="support_project_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["support_org_id"],
            ["support_org.id"],
            name="support_support_org_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["support_programm_id"],
            ["support_programm.id"],
            name="support_support_programm_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="support_pkey"),
        comment="Поддержка по проекту",
    )
    op.create_table(
        "user_project",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("project_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["project_id"], ["project.id"], name="user_project_project_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name="user_project_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="user_project_pkey"),
        comment="Связь пользователей системы с проектами",
    )
    op.create_table(
        "decision",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("support_id", sa.Integer(), nullable=True),
        sa.Column(
            "decision_type",
            sa.Enum("EG", "MVK", name="decision_type"),
            nullable=True,
            comment='Вид решения. Заполняет сотрудник. Источник протокол заседания. По итогам проведения комиссии"',
        ),
        sa.Column(
            "decision_date",
            sa.Date(),
            nullable=True,
            comment="Дата создания решения. Заполняет сотрудник. Источник протокол заседания. По итогам проведения комиссии",
        ),
        sa.Column(
            "protocol_number",
            sa.Text(),
            nullable=True,
            comment="Номер протокола. Заполняет сотрудник. Источник протокол заседания. По итогам проведения комиссии",
        ),
        sa.Column(
            "decision",
            sa.Text(),
            nullable=True,
            comment="Решение. Заполняет сотрудник. Источник протокол заседания. По итогам проведения комиссии",
        ),
        sa.ForeignKeyConstraint(
            ["support_id"], ["support.id"], name="decision_support_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="decision_pkey"),
        comment="Решения о выделении поддержки",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("decision")
    op.drop_table("user_project")
    op.drop_table("support")
    op.drop_table("project")
    op.drop_table("owner_contact")
    op.drop_table("owner")
    op.drop_table("business_org")
    op.drop_table("business_man")
    op.drop_table("address")
    op.drop_table("user")
    op.drop_table("support_programm")
    op.drop_table("support_org")
    op.drop_table("industry")
    op.drop_table("district")
    op.drop_table("city")
    # ### end Alembic commands ###
